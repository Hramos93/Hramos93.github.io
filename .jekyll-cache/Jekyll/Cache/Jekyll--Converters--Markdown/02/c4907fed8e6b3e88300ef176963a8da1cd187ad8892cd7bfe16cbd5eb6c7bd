I"†k<p>Entre algunos an√°lisis que miro frecuentemente est√°n los an√°lisis de mercado, espec√≠ficamente quantitive analysis(QA), es una rama muy amigable del an√°lisis de mercado,dado que me gusta programar  he decido realizar una series de gu√≠as de c√≥mo utilizar e interpretar est√°s las herramientas estad√≠sticas que tenemos a disposici√≥n para medir, modelar y comprender el comportamiento del mercado a trav√©s de programaci√≥n en python. 
Por ahora me planteo hacer tres gu√≠as de iniciaci√≥n, ser√°n muy sencillas, son los primeros pasos que se realizan para los estudios de mercado.</p>

<ul>
  <li>Obteniendo Data desde yahoo Finance</li>
  <li>Herramientas b√°sicas estad√≠sticas (Desviaci√≥n, Normalidad, skewness, Kurtosis y m√°s)</li>
  <li>Introducci√≥n a la Optimizaci√≥n de Portafolio</li>
</ul>

<p>Por √∫ltimo y m√°s importante, cualquier comentario o opini√≥n emitida aqu√≠ no es una recomendaci√≥n ni sugerencia en cuanto a administrar su portafolio de inversi√≥n, cada quien es responsable de las desici√≥n que tome,sin m√°s dilaci√≥n comencemos.</p>

<p>Inciemos extrayendo data de algunas shares  del mercado venezolano, esto para explicar como normalizo los precios al precio USD$ dado la inestabilidad que hay con el Bs actualmente, esto  facilitara los c√°lculos si tienes intenci√≥n de participar en el mercado venezolano, sin embargo funciona para cualquier mercado que se encuentre en yahoo finance.</p>

<p>Para extraer la data del mercado venezolano, se har√° uso de la API de yahoo finance donde se encuentran registro de los precios hist√≥ricos y actuales de cada de una de las acciones con las que se quiera comerciar,por otro lado, a la fecha de hoy venezuela sufre un periodo de crisis economica que mantiene una inestabilidad en la moneda nacional,lo cual dificulta los c√°lculos a nivel hist√≥rico dado a la variaci√≥n de precios, es decir, el precio hace dos a√±os dista mucho del precio actual debido a la inflaci√≥n.
Para resolver problema anterior se realizar√° un ajuste del precio en Bs al precio del USD$ , para conseguir historico cambiario del par USD/VEF, descargar el csv desde el 2018 <a href="https://www.investing.com/currencies/usd-vef-historical-data">USD/VEF</a>.</p>

<p>recuerda instalar las siguientes librerias</p>

<ul>
  <li>!pip install pandas #libreria que ofrece un framework amigable para el manejo de tablas</li>
  <li>!pip numpy  #libreria para el manejo de operaciones matematicas</li>
  <li>!pip matplotlib  #libreria para graficar</li>
  <li>!pip yfinance #API de yahoo finance.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">yfinance</span>  <span class="k">as</span> <span class="n">yf</span>
</code></pre></div></div>

<p>El primero paso que daremos consistira en hacer lectura de la archivo descargado desde investing,
la estructura de este archivo es basicamente un fecha, el precio promedio, el precio con que abre el mercado,
su valor m√°s alto, su valor m√°s bajo ¬´estos tres son iguales por alguna extra√±a razon¬ª y el porcentaje de cambio.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'assets/USD_VES.csv'</span><span class="p">,</span> <span class="n">header</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">index_col</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">parse_dates</span><span class="o">=</span><span class="bp">True</span> <span class="p">)</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Price</th>
      <th>Open</th>
      <th>High</th>
      <th>Low</th>
      <th>Change %</th>
    </tr>
    <tr>
      <th>Date</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2021-04-15</th>
      <td>2,375,839.2500</td>
      <td>2,378,816.5000</td>
      <td>2,378,816.5000</td>
      <td>2,378,816.5000</td>
      <td>2.88%</td>
    </tr>
    <tr>
      <th>2021-04-14</th>
      <td>2,309,375.0000</td>
      <td>2,312,269.0000</td>
      <td>2,312,269.0000</td>
      <td>2,312,269.0000</td>
      <td>-0.85%</td>
    </tr>
    <tr>
      <th>2021-04-13</th>
      <td>2,329,146.0000</td>
      <td>2,332,064.7500</td>
      <td>2,332,064.7500</td>
      <td>2,332,064.7500</td>
      <td>1.94%</td>
    </tr>
    <tr>
      <th>2021-04-12</th>
      <td>2,284,762.0000</td>
      <td>2,287,625.2500</td>
      <td>2,287,625.2500</td>
      <td>2,287,625.2500</td>
      <td>2.44%</td>
    </tr>
    <tr>
      <th>2021-04-09</th>
      <td>2,230,234.2500</td>
      <td>2,233,029.0000</td>
      <td>2,233,029.0000</td>
      <td>2,233,029.0000</td>
      <td>4.36%</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>2018-01-05</th>
      <td>0.0001</td>
      <td>0.0001</td>
      <td>0.0001</td>
      <td>0.0001</td>
      <td>0.00%</td>
    </tr>
    <tr>
      <th>2018-01-04</th>
      <td>0.0001</td>
      <td>0.0001</td>
      <td>0.0001</td>
      <td>0.0001</td>
      <td>0.00%</td>
    </tr>
    <tr>
      <th>2018-01-03</th>
      <td>0.0001</td>
      <td>0.0001</td>
      <td>0.0001</td>
      <td>0.0001</td>
      <td>0.00%</td>
    </tr>
    <tr>
      <th>2018-01-02</th>
      <td>0.0001</td>
      <td>0.0001</td>
      <td>0.0001</td>
      <td>0.0001</td>
      <td>0.00%</td>
    </tr>
    <tr>
      <th>2018-01-01</th>
      <td>0.0001</td>
      <td>0.0001</td>
      <td>0.0001</td>
      <td>0.0001</td>
      <td>0.00%</td>
    </tr>
  </tbody>
</table>
<p>836 rows √ó 5 columns</p>
</div>

<p>Una configuraci√≥n amigable para la lectura es, tomar la primera fila como los header que son los nombres de la columna, 
colocar la fecha como indice e indicarle que el indice es una fecha, adem√°s  indicaremos que s√≥lo necesitamos 
la columna del precio, ordenamos y renombramos la columna con un nombre m√°s adecuado del que trae por defecto.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">usdVEF</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'assets/USD_VES.csv'</span><span class="p">,</span> <span class="n">header</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">index_col</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">parse_dates</span><span class="o">=</span><span class="bp">True</span> <span class="p">)[</span><span class="s">'Price'</span><span class="p">]</span>
<span class="n">usdVEF</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">usdVEF</span><span class="p">.</span><span class="n">sort_index</span><span class="p">())</span> <span class="c1">#ordenamos de manera ascendente
</span><span class="n">usdVEF</span><span class="p">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Bs/USD$'</span><span class="p">]</span>  <span class="c1">#renombramos la columna
</span><span class="n">usdVEF</span><span class="p">.</span><span class="n">tail</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Bs/USD$</th>
    </tr>
    <tr>
      <th>Date</th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2021-04-09</th>
      <td>2,230,234.2500</td>
    </tr>
    <tr>
      <th>2021-04-12</th>
      <td>2,284,762.0000</td>
    </tr>
    <tr>
      <th>2021-04-13</th>
      <td>2,329,146.0000</td>
    </tr>
    <tr>
      <th>2021-04-14</th>
      <td>2,309,375.0000</td>
    </tr>
    <tr>
      <th>2021-04-15</th>
      <td>2,375,839.2500</td>
    </tr>
  </tbody>
</table>
</div>

<p>Ahora comencemos con lo bueno, haremos lectura de unas pocas acciones para entender el funcionamiento.</p>
<ul>
  <li>‚ÄòPTN.CR‚Äô</li>
  <li>‚ÄòMVZ-B.CR‚Äô</li>
  <li>‚ÄòFNC.CR‚Äô</li>
</ul>

<p>Primero creemos un DataFrame vacio, b√°sicamente lo que haremos se empaquetar todos los datos all√≠, solo ten presente eso, es decir, extraeremos la informaci√≥n de cada acci√≥n y la colocaremos en esta tabla.
Haremos lectura con de nuestras shares con la funci√≥n Ticker, esta se encuentra dentro de la liber√≠a de yahoo finance, esta funci√≥n prepara los datos para ser leidos es como ‚Äúoye prepara la share X que va ser leida‚Äù, 
una vez preparada hacemos lectura deacuerdo al per√≠odo que queremos, por lo general mientras m√°s datos tengas mejor, pero por ahora igual que con el par VEF/USD, aqui necesitamo solo el precio, y tomaremos solo 3 a√±os de datos.</p>

<p>La funci√≥n Ticker s√≥lo toma una share por paso as√≠ que haremos  recorrido varias veces,con esto podemos aprovechar  concatenar todos los datos.</p>

<p>Meter√© toda esta informaci√≥n en una funci√≥n, una funci√≥n nos facilitar√° mucho la vida, s√≥lo tendremos
que cambiar la lista de shares de la que queremos hacer lectura y funci√≥n har√° el mismo trabajo cada vez que queramos revisar nuevas acciones.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">equities</span> <span class="o">=</span> <span class="p">[</span><span class="s">'PTN.CR'</span><span class="p">,</span> <span class="s">'MVZ-B.CR'</span><span class="p">,</span> <span class="s">'FNC.CR'</span><span class="p">]</span>
<span class="k">def</span> <span class="nf">data</span><span class="p">(</span><span class="n">shares</span><span class="p">):</span>
    <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">()</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">shares</span><span class="p">:</span>
        <span class="n">read</span> <span class="o">=</span> <span class="n">yf</span><span class="p">.</span><span class="n">Ticker</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
        <span class="n">hist</span> <span class="o">=</span> <span class="n">read</span><span class="p">.</span><span class="n">history</span><span class="p">(</span><span class="n">period</span><span class="o">=</span><span class="s">"3y"</span><span class="p">)[</span><span class="s">'Close'</span><span class="p">]</span>
        <span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">hist</span><span class="p">)</span>
        <span class="n">data</span><span class="p">[</span><span class="s">'Close'</span><span class="p">].</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span><span class="p">]</span>
        <span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="o">~</span><span class="n">data</span><span class="p">.</span><span class="n">index</span><span class="p">.</span><span class="n">duplicated</span><span class="p">(</span><span class="n">keep</span><span class="o">=</span><span class="s">'first'</span><span class="p">)]</span>
        <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">concat</span><span class="p">([</span><span class="n">df</span><span class="p">,</span> <span class="n">data</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
        
    <span class="n">df</span><span class="p">.</span><span class="n">columns</span> <span class="o">=</span> <span class="n">shares</span>
    <span class="k">return</span> <span class="n">df</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df</span> <span class="o">=</span> <span class="n">data</span><span class="p">(</span><span class="n">equities</span><span class="p">)</span>
<span class="n">df</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>PTN.CR</th>
      <th>MVZ-B.CR</th>
      <th>FNC.CR</th>
    </tr>
    <tr>
      <th>Date</th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2018-04-16</th>
      <td>0.139857</td>
      <td>24.606991</td>
      <td>0.286</td>
    </tr>
    <tr>
      <th>2018-04-17</th>
      <td>0.139857</td>
      <td>24.606991</td>
      <td>0.340</td>
    </tr>
    <tr>
      <th>2018-04-18</th>
      <td>0.134862</td>
      <td>29.528389</td>
      <td>0.400</td>
    </tr>
    <tr>
      <th>2018-04-19</th>
      <td>0.134862</td>
      <td>29.528389</td>
      <td>0.400</td>
    </tr>
    <tr>
      <th>2018-04-20</th>
      <td>0.139857</td>
      <td>29.528389</td>
      <td>0.400</td>
    </tr>
  </tbody>
</table>
</div>

<p>Ahora que tenemos los datos del precio del dolar y el precio de nuestras shares, uniremos todo para ajustar los precios de las shares.</p>

<p>Luego de unir los datos, limpearemos un poco nuestro jardin, el formato de bs/USD$ son interpreados como string, asi que modificaremos eso para poder trabajar con el valor, luego estandarizamos, divimos el precio de nuestra accion al precio del dolar del mismo d√≠a.
Por √∫ltimo, tenemos una diferencia en las fechas entre los dataframe, la fecha de VEF/USD esta desde el enero 2018, mientra que alguna de nuestras shares solo tenemos data a partir de abril, esas diferencia entre fechas es rellenada con valores NaN, estos valores indican la ausencia de datos, removeremos todas esas filas ya que no presetan informaci√≥n de los precios.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dfUSD</span> <span class="o">=</span> <span class="n">usdVEF</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
<span class="n">dfUSD</span><span class="p">[</span><span class="s">'Bs/USD$'</span><span class="p">]</span> <span class="o">=</span> <span class="n">dfUSD</span><span class="p">[</span><span class="s">'Bs/USD$'</span><span class="p">].</span><span class="nb">str</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="s">','</span><span class="p">,</span><span class="s">''</span><span class="p">).</span><span class="n">astype</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">float64</span><span class="p">)</span>
<span class="n">dfUSD</span> <span class="o">=</span> <span class="n">dfUSD</span><span class="p">.</span><span class="n">iloc</span><span class="p">[:,</span><span class="mi">1</span><span class="p">:].</span><span class="n">div</span><span class="p">(</span><span class="n">dfUSD</span><span class="p">[</span><span class="s">'Bs/USD$'</span><span class="p">],</span><span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">).</span><span class="n">dropna</span><span class="p">(</span><span class="n">how</span><span class="o">=</span><span class="s">'all'</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dfUSD</span><span class="p">.</span><span class="n">describe</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>PTN.CR</th>
      <th>MVZ-B.CR</th>
      <th>FNC.CR</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>744.000000</td>
      <td>744.000000</td>
      <td>744.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>0.121614</td>
      <td>11.345256</td>
      <td>0.455251</td>
    </tr>
    <tr>
      <th>std</th>
      <td>0.215303</td>
      <td>24.504737</td>
      <td>0.374862</td>
    </tr>
    <tr>
      <th>min</th>
      <td>0.018838</td>
      <td>0.907388</td>
      <td>0.032763</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>0.032810</td>
      <td>2.236953</td>
      <td>0.222391</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>0.041672</td>
      <td>3.191995</td>
      <td>0.311285</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>0.110085</td>
      <td>4.872743</td>
      <td>0.600751</td>
    </tr>
    <tr>
      <th>max</th>
      <td>1.083583</td>
      <td>137.110170</td>
      <td>1.972814</td>
    </tr>
  </tbody>
</table>
</div>

<p>El primer concepto que revisaremos ser√° el performance de la share, en espa√±ol se refiere al rendimiento o retorno, es decir, cuanta vario el precio con respecto al precio anterior.
Recordemos que el retorno para un tiempo \(t\) a un tiempo \({t+1}\) esta dado por :</p>

\[R_{t,t+1} = \frac{P_{t+1}-P_{t}}{P_{t}}\]

<p>una alternativa muy com√∫n que veo en excel es usar esta.</p>

\[R_{t,t+1} = \frac{P_{t+1}}{P_{t}} - 1\]

<p>Secillamente le estamos pidiendo que compare el precio con un precio anterior y nos muestre el resultado en terminos de porcentaje.</p>

<p>Es una funci√≥n sencilla pero antes de que intentes algo como este c√≥digo,</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="n">dfUSD</span><span class="p">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">1</span><span class="p">:]</span><span class="o">/</span><span class="n">dfUSD</span><span class="p">.</span><span class="n">iloc</span><span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="n">values</span> <span class="o">-</span> <span class="mi">1</span>

</code></pre></div></div>

<p>Recuerda necesitas forzar un lag en la serie de tiempo porque trabajas con un tiempo adelante, y de esa forma aunque el c√°lculo esta bien planteado no estar√° bien ordenado, te invito a probar como ejercicio.</p>

<p>Para resolver este problema de periodos python tiene la funci√≥n <a href="https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.shift.html">shift()</a>, esta funci√≥n permite mover un paso adelante los registros, intetemos!</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">FNC</span> <span class="o">=</span> <span class="n">dfUSD</span><span class="p">[</span><span class="s">'FNC.CR'</span><span class="p">]</span><span class="o">/</span><span class="n">dfUSD</span><span class="p">[</span><span class="s">'FNC.CR'</span><span class="p">].</span><span class="n">shift</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="o">-</span><span class="mi">1</span>
<span class="n">FNC</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Date
2018-04-16         NaN
2018-04-17    0.188811
2018-04-18    0.176471
2018-04-19    0.000000
2018-04-20   -0.110995
Name: FNC.CR, dtype: float64
</code></pre></div></div>

<p>Entendiendo como funciona el c√°lculo, y como puedes hacerlo por ti mismo, ahora te dare el camino f√°cil, es la funci√≥n de python <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.pct_change.html">ptc_change()</a></p>

<p><cite>‚ÄúPercentage change between the current and a prior element‚Äù.</cite> esta es la definici√≥n que ofrece la documentaci√≥n, justo lo que queremos, veamos si funciona.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">FNCR</span> <span class="o">=</span> <span class="n">dfUSD</span><span class="p">[</span><span class="s">'FNC.CR'</span><span class="p">].</span><span class="n">pct_change</span><span class="p">()</span>
<span class="n">FNCR</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Date
2018-04-16         NaN
2018-04-17    0.188811
2018-04-18    0.176471
2018-04-19    0.000000
2018-04-20   -0.110995
Name: FNC.CR, dtype: float64
</code></pre></div></div>

<p>Perfecto! Tenemos exactamente el mismo resultado que plantea la formula, podemos confiar en esta declaraci√≥n, ahora veamos como podemos representar esos datos.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">FNCR</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="mi">7</span><span class="p">))</span>
<span class="n">plt</span><span class="p">.</span><span class="n">grid</span><span class="p">(</span><span class="n">alpha</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Performance FNC 2018-2021'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="/img/posts/market/04.png" alt="jpg" /></p>

<p>Esta figura nos muestra cosas muy interesante como por ejemplo cerca a septiembre del 2018 hubo una caida basta fuerte cas√≠ del 100% del precio, curiosamente en agosto del 2018 ocurrio una reconversi√≥n monetaria en Venezuela, tambi√©n podemos ver como el precio comienza  a tomar ajustes y como comienza a ofrecer retornos  entre +- 25%, pero para ver el rendimiento de una share es preferible usar un histograma, veamos el rendimiento de esta forma.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">FNCR</span><span class="p">[</span><span class="s">'2021'</span><span class="p">:</span><span class="s">'2021'</span><span class="p">].</span><span class="n">hist</span><span class="p">(</span><span class="n">bins</span><span class="o">=</span><span class="mi">30</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>
<span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'performance distribution FNC'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="/img/posts/market/2.png" alt="jpg" /></p>

<p>Ahorap odemos ver que para la fecha 2018-2021 ha tenido retornos negativos y positivos en frecuencias similares, sin embargo los negativos ocupan un porci√≥n relativamente mayor, adem√°s vemos que aunque con poca probabilidades se pueden obtener un rendimiento de hasta el 20% pero igual manera se puede tener perdidas de casi el 20%.</p>

<p>Por √∫ltimo quiero que miremos algo muy interesante, y es el indexado que seleccionamos al comienzo, esto tambi√©n ser√° mucha m√°s utilidad m√°s adelante cuando necesitemos comparar \(t\) con \({t-n}\), no profundizare en eso ahora, simplemente quiero mostrar c√≥mo con el √≠ndice podemos elegir los periodos de estudio, es algo muy sencillo,tenemos que seleccionar el periodo que queremos evaluar como se muestra en el  siguiente c√≥digo.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data</span><span class="p">[</span><span class="s">'fecha inicio'</span><span class="p">:</span><span class="s">'fecha final'</span><span class="p">]....</span>
</code></pre></div></div>

<p>Veamos si funciona.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">FNCR</span><span class="p">[</span><span class="s">'2021'</span><span class="p">:</span><span class="s">'2021'</span><span class="p">].</span><span class="n">plot</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="mi">7</span><span class="p">))</span>
<span class="n">plt</span><span class="p">.</span><span class="n">grid</span><span class="p">(</span><span class="n">alpha</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Performance FNC a√±o 2021'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="/img/posts/market/3.png" alt="png" /></p>

<p>Esto puedes usarlo para graficar, en tablas y c√°lculos, una genialidad.</p>

<p>Bueno esto es todo por ahora, espero que haya sido muy ilustrativo y que hayas aprendido bastante, sin m√°s que decirte espero verte en la segunda parte de este mini-turorial.</p>

:ET